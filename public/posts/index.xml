<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Zuhaib Ul Zamann</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Zuhaib Ul Zamann</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Feb 2025 19:46:40 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Evaluating uvloop Performance for I/O Bound Workloads in Python</title>
      <link>http://localhost:1313/posts/uvloop/</link>
      <pubDate>Sun, 02 Feb 2025 19:46:40 +0530</pubDate>
      <guid>http://localhost:1313/posts/uvloop/</guid>
      <description>&lt;p&gt;Writing &lt;code&gt;async&lt;/code&gt; coroutines is a common approach for handling I/O-bound workloads in modern applications. Having worked extensively with Python&amp;rsquo;s built-in &lt;code&gt;asyncio&lt;/code&gt; module, I had always relied on its default event loop without considering alternatives. However, while working with the &lt;a href=&#34;https://github.com/vllm-project/vllm/blob/f256ebe4df6757d76f1f1642d7e110268a2f8190/vllm/entrypoints/openai/api_server.py#L909C1-L909C33&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vllm&lt;/a&gt; library, I encountered a scenario that led me to explore different event loops.&lt;/p&gt;&#xA;&lt;p&gt;A quick search led me to a &lt;a href=&#34;https://magic.io/blog/uvloop-blazing-fast-python-networking/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt; discussing uvloop, a high-performance event loop for Python. The authors claim that uvloop is at least twice as fast as other Python asynchronous frameworks. However, their performance benchmarks primarily focus on handling thousands of parallel requests with minimal server-side processing, which may not reflect real-world workloads where some async coroutines involve CPU-intensive operations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Camera Callibration</title>
      <link>http://localhost:1313/posts/camera-callibration/</link>
      <pubDate>Sat, 18 Jan 2025 22:13:31 +0530</pubDate>
      <guid>http://localhost:1313/posts/camera-callibration/</guid>
      <description>&lt;h2 id=&#34;table-of-contents&#34;&gt;&#xA;  Table of Contents&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#table-of-contents&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#Introduction&#34; &gt;Introduction&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#pinhole-camera&#34; &gt;Pinhole Camera&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#homogeneous-coordinate-system&#34; &gt;Homogeneous Coordinate System&lt;/a&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#homogeneous-image-coordinate-system&#34; &gt;Homogeneous Image Coordinate system&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#homogeneous-world-coordinate-system&#34; &gt;Homogeneous World Coordinate System&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#mathematics-of-camera-projection&#34; &gt;Mathematics of Camera Projection&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#real-projective-plane&#34; &gt;Real Projection Plane&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#homography&#34; &gt;Homography&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#direct-linear-transform&#34; &gt;Direct Linear Transform&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#zhangs-algorithm&#34; &gt;Zhang&amp;rsquo;s Algorithm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;&#xA;  Introduction&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#introduction&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In this blog, we will know about a basic pinhole camera. We will know what camera matrix is, what are intrinsic and extrinsic parameters. We will also learn how we can find these parameters and will also provide an implementation in python for the same.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
